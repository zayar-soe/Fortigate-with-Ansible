- name: Request IT approval for patch
  hosts: localhost
  gather_facts: no
  vars_files:
    - group_vars/fortinet.yml
  tasks:
    - name: Read firmware check result
      slurp:
        src: "/tmp/firmware_check_result.json"
      register: slurped_result

    - name: Decode and parse JSON
      set_fact:
        firmware_result: "{{ slurped_result['content'] | b64decode | from_json }}"

    - name: Send email for patch approval
      community.general.mail:
        host: smtp.example.com
        port: 587
        username: patchbot@example.com
        password: "{{ email_password }}"
        to: it_team@example.com
        subject: "Approval Needed: Patch FortiGate to {{ firmware_result.meta.version }}"
        body: |
          A firmware patch ({{ firmware_result.meta.version }}) is available for FortiGate.
          Approve to apply this patch.

    - name: Wait for IT approval
      pause:
        prompt: "Type YES to approve patch application"
      register: approval_input

    - name: Fail if not approved
      fail:
        msg: "Patch not approved. Exiting."
      when: approval_input.user_input != 'YES'
